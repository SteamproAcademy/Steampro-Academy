

‚úÖ FINAL REPLIT MVP PROMPT

I want to build a full-stack internal training platform for my startup using Next.js + Tailwind CSS, with no backend or database. It should run entirely on Replit and use localStorage for progress and login session.

‚∏ª

üîê LOGIN PAGE (/)
	‚Ä¢	Use hardcoded credentials, stored in users.ts:

export const users = [
  {
    email: "yuvraj.kumar@steampro.in",
    password: "12345",
    department: "sales"
  },
  {
    email: "rahul.sharma@steampro.in",
    password: "abcd1234",
    department: "ops"
  },
  {
    email: "anita.verma@steampro.in",
    password: "pass5678",
    department: "marketing"
  }
];

	‚Ä¢	On successful login:
	‚Ä¢	Save user object to localStorage
	‚Ä¢	Redirect to /dashboard

‚∏ª

üìä DASHBOARD PAGE (/dashboard)
	‚Ä¢	Show 3 training tracks:
	1.	Core Training
	2.	Departmental Training (based on user‚Äôs department)
	3.	HR Training
	‚Ä¢	Load all training content from trainingData.ts
	‚Ä¢	Display progress and lock/unlock modules accordingly
	‚Ä¢	Store all progress in localStorage

‚∏ª

üóÇÔ∏è CONTENT STRUCTURE (trainingData.ts)

Create a data file like this:

export const trainingData = {
  core: [
    {
      id: "core-1",
      title: "Welcome to SteamPRO",
      videoUrl: "https://www.youtube.com/embed/abc123",
      transcript: "Welcome to SteamPRO! We're a bath-tech startup...",
      readingMaterial: "<h2>About SteamPRO</h2><p>We launched in 2020...</p>",
      quiz: [
        {
          question: "When was SteamPRO founded?",
          choices: ["2018", "2020", "2022"],
          correctAnswer: "2020"
        },
        ...
      ]
    },
    ...
  ],
  departmental: {
    sales: [...],
    ops: [...],
    marketing: [...],
    finance: [...],
    manufacturing: [...]
  },
  hr: [...]
};

You should be able to add or update training content just by editing this file.

‚∏ª

üìò MODULE PAGE (/module/[id])
	‚Ä¢	Load dynamically based on id
	‚Ä¢	Each module has 3 parts in a single scroll page:

1. üé• Video Section
	‚Ä¢	Embed unlisted YouTube video using ReactPlayer
	‚Ä¢	Disable skip (no seeking)
	‚Ä¢	Track watched time
	‚Ä¢	Unlock next section only after 100% watched

2. üìñ Reading Material
	‚Ä¢	Display rich HTML content (loaded from trainingData.ts)
	‚Ä¢	Appears only after video is watched completely

3. ‚úÖ Quiz
	‚Ä¢	Multiple-choice quiz (at least 3 questions)
	‚Ä¢	Appears after reading material is visible
	‚Ä¢	Must get 100% to complete the module
	‚Ä¢	Allow retries with feedback

Store progress in localStorage after quiz completion.

‚∏ª

üéì CERTIFICATE PAGE (/certificate)
	‚Ä¢	Show when all Core, Departmental, and HR modules are completed
	‚Ä¢	Generate a PDF certificate using html2pdf.js or jspdf
	‚Ä¢	Include:
	‚Ä¢	User Name
	‚Ä¢	Department
	‚Ä¢	Date
	‚Ä¢	SteamPRO logo
	‚Ä¢	Founder‚Äôs signature image

‚∏ª

üì§ REFLECTION PAGE (/reflection)
	‚Ä¢	Final step after certificate
	‚Ä¢	Show instructions:
‚ÄúRecord a 5-minute video summarizing what you learned during Core, Departmental, and HR training. Mention how you‚Äôll apply it at work.‚Äù
	‚Ä¢	Embed Google Form inside an iframe
	‚Ä¢	Include fields: Name, Email, Department, File Upload (video)

‚∏ª

üé® UI & STYLE REQUIREMENTS
	‚Ä¢	Use Tailwind CSS
	‚Ä¢	Font: Montserrat
	‚Ä¢	Custom color palette:
	‚Ä¢	#121927 (Dark)
	‚Ä¢	#13325A (Primary Blue)
	‚Ä¢	Layout should be:
	‚Ä¢	Clean, corporate look
	‚Ä¢	Responsive and mobile-friendly
	‚Ä¢	Use progress indicators like ‚ÄúStep 1 of 3‚Äù

‚∏ª

‚úÖ TECH STACK SUMMARY

Feature	Tech/Tool
Framework	Next.js
Styling	Tailwind CSS
Font	Montserrat (Google Fonts)
Auth	Hardcoded via users.ts
Content	Modular via trainingData.ts
State	localStorage only
Video Player	ReactPlayer + YouTube (unlisted)
Certificate	html2pdf.js or jspdf
Hosting	Replit Web App


‚∏ª

‚úÖ Additional Requirements
	‚Ä¢	Modules must flow in order: Video ‚Üí Reading ‚Üí Quiz
	‚Ä¢	Disable fast-forwarding video
	‚Ä¢	Quiz & reading appear only after video watched fully
	‚Ä¢	Must get 100% on quiz to unlock next module
	‚Ä¢	All content editable from data files only ‚Äî no code changes needed to update videos, reading, or quizzes

